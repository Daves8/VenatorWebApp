
CREATE TABLE USERS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	USER_NAME VARCHAR(50) NOT NULL UNIQUE,
	PASSWORD VARCHAR(100) NOT NULL,
	FULL_NAME VARCHAR(100),
	EMAIL VARCHAR(50) NOT NULL UNIQUE,
	PHONE_NUMBER VARCHAR(50),
	IMAGE_URL VARCHAR(50),
	ROLE INT,
	GOLD_AMOUNT DECIMAL(10,2),
	CREATION_DATE DATETIME
);

CREATE TABLE ITEMS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	NAME VARCHAR(50),
	DESCRIPTION VARCHAR(255),
	CATEGORY INT,
	PRICE DECIMAL(10,2),
	IS_HIDDEN BIT,
	IMAGE_URL VARCHAR(50),
	CREATION_DATE DATETIME,
);

CREATE TABLE ITEMS_IN_USER (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	USER_ID INT,
	ITEM_ID INT,
	IN_CART BIT,
	CREATION_DATE DATETIME
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
	FOREIGN KEY (ITEM_ID) REFERENCES ITEMS (ID)
);

CREATE TABLE REACTIONS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	REACTION_TYPE INT,
	TEXTUAL_ID INT,
	TEXTUAL_TYPE INT,
	USER_ID INT,
	CREATION_DATE DATETIME,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE TOPICS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TITLE VARCHAR(200),
	TEXT TEXT,
	METRICS VARCHAR(50),
	USER_ID INT,
	LIKES_COUNT INT,
	DISLIKES_COUNT INT,
	IS_HIDDEN BIT,
	CREATION_DATE DATETIME,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE NEWS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TITLE VARCHAR(200),
	TEXT TEXT,
	METRICS VARCHAR(50),
	USER_ID INT,
	LIKES_COUNT INT,
	DISLIKES_COUNT INT,
	IS_HIDDEN BIT,
	CREATION_DATE DATETIME,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);

CREATE TABLE COMMENTS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TEXT TEXT,
	PARENT_TYPE_ID INT,
	PARENT_ID INT,
	USER_ID INT,
	LIKES_COUNT INT,
	DISLIKES_COUNT INT,
	IS_HIDDEN BIT,
	CREATION_DATE DATETIME,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID),
);

CREATE TABLE MESSAGES (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	TEXT TEXT,
	FROM_USER_ID INT,
	TO_USER_ID INT,
	PARENT_MESSAGE_ID INT,
	IS_HIDDEN BIT,
	CREATION_DATE DATETIME,
	FOREIGN KEY (FROM_USER_ID) REFERENCES USERS (ID),
	FOREIGN KEY (TO_USER_ID) REFERENCES USERS (ID),
	FOREIGN KEY (PARENT_MESSAGE_ID) REFERENCES MESSAGES (ID)
);

CREATE TABLE STATS (
	ID INT IDENTITY(1,1) PRIMARY KEY,
	USER_ID INT,
	COMPLETED_QUESTS_COUNTER INT,
	KILLED_PLAYERS_COUNTER INT,
	KILLED_NPC_COUNTER INT,
	KILLED_ANIMALS_COUNTER INT,
	DEATH_FROM_PLAYERS_COUNTER INT,
	DEATH_FROM_NPC_COUNTER INT,
	DEATH_FROM_ANIMALS_COUNTER INT,
	FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);